SRC_EXT='.*\.\(s\|S\|c\|C\|cc\|CC\|h\|H\|cpp\|CPP\|ino\|java\|JAVA\|a51\|A51\|qml\|QML\)'

####################################################
# Grep
####################################################
Grep() {
	local _args=("$@")
	grep "${_args[@]}" --include=\*.{c,C,cpp,h,CPP,H,java,ino}
}

####################################################
# Tags
####################################################
Tags() {
	[ -e "./tags" ] && rm -rf tags
	find $dir -regex $SRC_EXT | xargs ctags -a -f tags.norm
	find $dir -name "*.ino" | xargs ctags -a --langmap=c++:.ino -f tags.ardu >/dev/null 2>&1
	cat tags.norm > tags
	if [ -e "tags.ardu" ] ; then 
		tail -n+6 tags.ardu >> tags
		sort tags -o tags
	fi
	rm -f tags.norm tags.ardu
}

QBDIR=/home/hslee/Qt5.1.0/5.1.0/gcc_64
QTags() {
	if [ "$1" == "-rm" -o "$1" == "rm" ] ; then
		[ -h "./include" ] && rm ./include
		[ -e "./tags" ] && rm ./tags
	elif [ ."$1" == ."" ] ; then
		[ -e "./tags" ] && rm -rf tags
		if [ -h "./include" ] ; then 
			rm -rf ./include
			ln -sf $QBDIR/include include
		elif [ ! -e "./include" ] ; then
			ln -sf $QBDIR/include include
		else
			echo "Can not make to symblic link of QT headers"
		fi
		cp $QBDIR/tags .
		find . -regex $SRC_EXT | xargs ctags -a
	else
		echo "QTags usage : QTags [-rm|rm]"
	fi
}

####################################################
# Qt
####################################################
Qmake() {
	qmake -project
	if [ "$?" == "0" ] ; then
		Qpro=`ls *.pro`
		echo >> $Qpro
		echo "QT += core gui" >> $Qpro
		echo "greaterThan(QT_MAJOR_VERSION, 4): QT += widgets" >> $Qpro
	fi
}

####################################################
# 7z
####################################################
z7() {
	Z7EXCLUDE="-xr!*.swp"
	if [ "$1" == "nr" ] ; then
		# No repository files
		Z7EXCLUDE="$Z7EXCLUDE -xr!.svn -xr!.git"
		shift 1
	elif [ "$1" == "" ] ; then
		echo "Z7 usage : Z7 [nr] [archive_name] <directory|file>"
		return
	fi
	if [ ! -e "$1" ] ; then
		Z7AN=$1
		shift 1
	else
		Z7AN=$1.`date +%y%m%d-%H%M`.7z
	fi
	echo "7z a $Z7EXCLUDE $Z7AN $*"
	7z a $Z7EXCLUDE $Z7AN $*
}

####################################################
# Iconv
####################################################
Iconv() {
	# iconv -f euc-kr -t utf-8 -o Global.c.java Global.java
	_vn=`date +%Y%m%d%H%M%S.%N`
	_tf="/tmp/_iconv.$_vn"
	iconv -f $1 -t utf-8 -o $_tf $2
	if [ "$?" == '0' ] ; then
		mv $_tf $2
		return 0
	fi
	echo "iconv error : $2"
	return 1
}

####################################################
# cscope
####################################################
Cscope() {
	rm -rf cscope.files cscope.out
	find $_base -regex $SRC_EXT -print > cscope.files
	cscope -i cscope.files
}


####################################################
# cscope
####################################################
RmLF() {
	local _tmp="/tmp/.RemoveLineFeed"
	local _ext=""
	local _regul="(c$|C$|h$|H$|cpp$|CPP$|ino$|INO$|xml$|XML$|json$|JSON$)"
	for F in $*
	do
		_ext="${F##*.}"
		if [[ $F =~ $_regul ]] ; then
			[ -d $F ] && continue
			echo $F
			sed 's/\r//g' $F > $_tmp
			mv $_tmp $F
		fi
	done
}

